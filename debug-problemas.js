const cheerio = require('cheerio');

// Simular a fun√ß√£o extractCityAndState do utils.ts
function extractCityAndState(location) {
  if (!location) return { state: null, city: null };
  
  // Padr√£o 1: "Cidade/UF" (ex: "S√£o Paulo/SP")
  const cityStateMatch = location.match(/^(.+)\/([A-Z]{2})$/);
  if (cityStateMatch) {
    const city = cityStateMatch[1].trim();
    const state = cityStateMatch[2];
    return { state, city: city || null };
  }
  
  // Padr√£o 2: Apenas "UF" (ex: "SP")
  const stateOnlyMatch = location.match(/^([A-Z]{2})$/);
  if (stateOnlyMatch) {
    const state = stateOnlyMatch[1];
    return { state, city: null };
  }
  
  return { state: null, city: location };
}

async function testProblematicScenarios() {
  console.log('üîç Testando cen√°rios problem√°ticos...');
  
  // Cen√°rio 1: Problema no scraper de BOI (usa extractCityAndState)
  console.log('\nüìä TESTE 1: Scraper de BOI (usa extractCityAndState)');
  const boiHTML = `
    <table>
      <tbody>
        <tr><td>Localiza√ß√£o</td><td>Pre√ßo</td></tr>
        <tr><td>S√£o Paulo/SP</td><td>320,00</td></tr>
        <tr><td>Campo Grande/MS</td><td>315,50</td></tr>
        <tr><td>Dourados</td><td>318,00</td></tr>
        <tr><td>Cuiab√°/MT</td><td>312,00</td></tr>
        <tr><td>Rondon√≥polis</td><td>313,50</td></tr>
      </tbody>
    </table>`;
  
  const $boi = cheerio.load(boiHTML);
  let currentState = '';
  
  $boi('tbody tr').each((idx, row) => {
    if (idx > 0) {
      const cols = $boi(row).children();
      const location = $boi(cols[0]).text().trim();
      const rawPrice = $boi(cols[1]).text().trim();
      
      console.log(`\nLinha ${idx}: "${location}" - "${rawPrice}"`);
      
      let { state, city } = extractCityAndState(location);
      console.log(`  extractCityAndState: state="${state}", city="${city}"`);
      
      // L√≥gica do scraper de BOI
      if (!state && currentState) {
        state = currentState;
        city = location || null;
        console.log(`  üîÑ Usando estado anterior: ${state}, cidade ajustada: ${city}`);
      } else if (state) {
        currentState = state;
        console.log(`  ‚úÖ Novo estado definido: ${state}`);
      }
      
      if (!rawPrice) {
        console.log(`  ‚ùå PROBLEMA: Sem pre√ßo, pulando`);
        return;
      }
      
      if (rawPrice && state) {
        console.log(`  ‚úÖ SALVO: ${state} - ${city || 'N/A'} - R$ ${rawPrice}`);
      } else {
        console.log(`  ‚ùå PROBLEMA: N√£o salvou - state: ${state}, price: ${rawPrice}`);
      }
    }
  });
  
  // Cen√°rio 2: Problema no scraper de SOJA (l√≥gica diferente)
  console.log('\nüìä TESTE 2: Scraper de SOJA (l√≥gica de colunas separadas)');
  const sojaHTML = `
    <table>
      <tbody>
        <tr><td>Estado</td><td>Cidade</td><td>Pre√ßo</td></tr>
        <tr><td>SP</td><td>S√£o Paulo</td><td>152,50</td></tr>
        <tr><td></td><td>Campinas</td><td>151,80</td></tr>
        <tr><td>MS</td><td>Campo Grande</td><td>148,30</td></tr>
        <tr><td></td><td>Dourados</td><td>149,50</td></tr>
        <tr><td></td><td></td><td></td></tr>
        <tr><td>MT</td><td>Cuiab√°</td><td>150,00</td></tr>
        <tr><td></td><td>Rondon√≥polis</td><td>151,00</td></tr>
      </tbody>
    </table>`;
  
  const $soja = cheerio.load(sojaHTML);
  let oldState = '';
  
  $soja('tbody tr').each((idx, row) => {
    if (idx > 0) { // Pular cabe√ßalho (como no c√≥digo original)
      const cols = $soja(row).children();
      let state = $soja(cols[0]).text().replace(/(\s+)/g, ' ').trim();
      let city = $soja(cols[1]).text().replace(/(\s+)/g, ' ').trim();
      const rawPrice = $soja(cols[2]).text().replace(/(\s+)/g, ' ').trim();
      
      console.log(`\nLinha ${idx}: state="${state}" city="${city}" price="${rawPrice}"`);
      
      // L√≥gica exata do scraper de SOJA
      if (!state && !city) {
        console.log(`  ‚ùå PROBLEMA: Pulando - nem estado nem cidade`);
        return; // CONTINUE equivale a return em forEach
      }
      
      if (!state && oldState) {
        state = oldState;
        console.log(`  üîÑ Usando estado anterior: ${state}`);
      } else if (state) {
        oldState = state;
        console.log(`  ‚úÖ Novo estado definido: ${state}`);
      }
      
      if (!city) {
        city = "N/A";
        console.log(`  ‚ö†Ô∏è  Cidade vazia, definida como N/A`);
      }
      
      if (!rawPrice) {
        console.log(`  ‚ùå PROBLEMA: Sem pre√ßo, pulando`);
        return;
      }
      
      // L√≥gica da condi√ß√£o final
      if (rawPrice && state) { // No c√≥digo original: if (price && state)
        console.log(`  ‚úÖ SALVO: ${state} - ${city} - R$ ${rawPrice}`);
      } else {
        console.log(`  ‚ùå PROBLEMA: N√£o salvou - state: ${state}, price: ${rawPrice}`);
      }
    }
  });
  
  // Cen√°rio 3: Teste com linha completamente vazia (problema comum)
  console.log('\nüìä TESTE 3: Linhas vazias/problem√°ticas');
  const emptyHTML = `
    <table>
      <tbody>
        <tr><td>Estado</td><td>Cidade</td><td>Pre√ßo</td></tr>
        <tr><td>SP</td><td>S√£o Paulo</td><td>152,50</td></tr>
        <tr><td></td><td></td><td></td></tr>
        <tr><td>MS</td><td>Campo Grande</td><td>148,30</td></tr>
        <tr><td></td><td>Dourados</td><td></td></tr>
        <tr><td></td><td>Tr√™s Lagoas</td><td>149,80</td></tr>
      </tbody>
    </table>`;
  
  const $empty = cheerio.load(emptyHTML);
  let testOldState = '';
  
  $empty('tbody tr').each((idx, row) => {
    if (idx > 0) {
      const cols = $empty(row).children();
      let state = $empty(cols[0]).text().trim();
      let city = $empty(cols[1]).text().trim();
      const rawPrice = $empty(cols[2]).text().trim();
      
      console.log(`\nLinha ${idx}: state="${state}" city="${city}" price="${rawPrice}"`);
      
      // Teste da condi√ß√£o que pode estar causando o problema
      if (!state && !city) {
        console.log(`  ‚ùå SKIP: Condi√ß√£o (!state && !city) = true`);
        return;
      }
      
      if (!state && testOldState) {
        state = testOldState;
        console.log(`  üîÑ Estado restaurado: ${state}`);
      } else if (state) {
        testOldState = state;
        console.log(`  ‚úÖ Estado salvo: ${state}`);
      }
      
      if (!city) city = "N/A";
      
      if (!rawPrice) {
        console.log(`  ‚ùå SKIP: Sem pre√ßo`);
        return;
      }
      
      console.log(`  üéØ RESULTADO: ${state} - ${city} - R$ ${rawPrice}`);
    }
  });
}

testProblematicScenarios().catch(console.error);